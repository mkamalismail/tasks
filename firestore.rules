rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is verified
    function isEmailVerified() {
      return request.auth.token.email_verified == true;
    }

    // Helper function to check if the user owns the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Helper function to validate ISO date string
    function isValidISODate(date) {
      return date is string &&
        date.matches('^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$');
    }

    // Tasks collection rules
    match /tasks/{taskId} {
      // Allow read if authenticated and user owns the document
      allow read: if isAuthenticated() && isOwner(resource.data.userId);
      
      // Allow create if the user is authenticated, email-verified, and setting themselves as owner
      allow create: if isAuthenticated() 
        && isEmailVerified()
        && request.resource.data.userId == request.auth.uid
        && isValidISODate(request.resource.data.createdAt);
      
      // Allow update if the user is authenticated, email-verified, and owns the document
      allow update: if isAuthenticated() 
        && isEmailVerified()
        && isOwner(resource.data.userId)
        && request.resource.data.userId == resource.data.userId;
      
      // Allow delete if the user is authenticated, email-verified, and owns the document
      allow delete: if isAuthenticated() 
        && isEmailVerified()
        && isOwner(resource.data.userId);
    }
  }
}